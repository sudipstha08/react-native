{"version":3,"names":[],"sources":["model.ts"],"sourcesContent":["import type {\n  StyleProp,\n  TextStyle,\n  ViewStyle,\n  TextProps,\n  ImageStyle,\n} from 'react-native';\n\nexport type IDropdownRef = {\n  open: () => void;\n  close: () => void;\n};\n\nexport type DropdownProps = {\n  testID?: string;\n  itemTestIDField?: string;\n  style?: StyleProp<ViewStyle>;\n  containerStyle?: StyleProp<ViewStyle>;\n  placeholderStyle?: StyleProp<TextStyle>;\n  selectedTextStyle?: StyleProp<TextStyle>;\n  selectedTextProps?: TextProps;\n  itemContainerStyle?: StyleProp<ViewStyle>;\n  itemTextStyle?: StyleProp<TextStyle>;\n  inputSearchStyle?: StyleProp<TextStyle>;\n  iconStyle?: StyleProp<ImageStyle>;\n  maxHeight?: number;\n  fontFamily?: string;\n  iconColor?: string;\n  activeColor?: string;\n  data: any[];\n  value?: any | null;\n  placeholder?: string;\n  labelField: string;\n  valueField: string;\n  search?: boolean;\n  searchPlaceholder?: string;\n  disable?: boolean;\n  autoScroll?: boolean;\n  showsVerticalScrollIndicator?: boolean;\n  dropdownPosition?: 'auto' | 'top' | 'bottom';\n  flatListProps?: any;\n  keyboardAvoiding?: boolean;\n  statusBarIsTranslucent?: boolean;\n  backgroundColor?: string;\n  onChange: (item: any) => void;\n  renderLeftIcon?: () => JSX.Element | null | undefined;\n  renderRightIcon?: () => JSX.Element | null | undefined;\n  renderItem?: (\n    item: any,\n    selected?: boolean\n  ) => JSX.Element | null | undefined;\n  renderInputSearch?: (\n    onSearch: (text: string) => void\n  ) => JSX.Element | null | undefined;\n  onFocus?: () => void;\n  onBlur?: () => void;\n  searchQuery?: (keyword: string, labelValue: string) => boolean;\n  onChangeText?: (search: string) => void;\n};\n"],"mappings":""}